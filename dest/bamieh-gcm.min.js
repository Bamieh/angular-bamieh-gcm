/*!
Angular-Bamieh-GCM v0.0.15
2015-08-05
https://github.com/Bamieh/angular-bamieh-gcm
*/
!function(a,b,c){"use strict";function d(a){"serviceWorker"in navigator?navigator.serviceWorker.register("service-worker.js",{scope:"/"}).then(a.initialiseState):console.log("Service Workers are not Supported.")}function e(a,b,c){this.toggleDevice=function(){return c.getDisabled()===!0?{checked:!1,disabled:!0}:(console.log("toogle:",c.getChecked()),c.getChecked()===!0?(console.log("UNSUB"),this.unsubscribeDevice()):(console.log("SUB"),this.subscribeDevice()))},this.subscribeDevice=function(){var d=a.defer();return c.setDisabled(!0),navigator.serviceWorker.ready.then(function(a){a.pushManager.subscribe({userVisibleOnly:!0}).then(b.setEndpoint)["catch"](function(a){"permissions"in navigator?navigator.permissions.query({name:"push",userVisibleOnly:!0}).then(function(b){if(console.log("subscribe() Error: Push permission status = ",b),c.setChecked(!1),"denied"===b.status)console.log("Notifications are Blocked");else{if("prompt"===b.status)return void c.setDisabled(!1);console.log("Push Couldn not Register",a.message),c.setDisabled(!1),c.setChecked(!1)}})["catch"](function(a){console.log("Push Couldn not Register",a.message),c.setDisabled(!1),c.setChecked(!1)}):("denied"===Notification.permission?(console.log("Notifications are Blocked"),c.setDisabled(!0)):(console.log("Push Couldn not Register",a.message),c.setDisabled(!1)),c.setChecked(!1))})}).then(function(){c.setDisabled(!1),c.setChecked(!0),d.resolve({checked:!0,disabled:!1})}),d.promise},this.unsubscribeDevice=function(){var b=a.defer();return c.setDisabled(!0),navigator.serviceWorker.ready.then(function(a){a.pushManager.getSubscription().then(function(a){return a?void a.unsubscribe().then(function(a){console.log("Unsubscribed from push: ",a),a||console.error("Unable to unregister from push"),c.setDisabled(!1),c.setChecked(!1),b.resolve({disabled:!1,checked:!1})})["catch"](function(a){console.log("Unsubscribtion error: ",a),c.setDisabled(!1),c.setChecked(!0),b.resolve({disabled:!1,checked:!0})}):(c.setDisabled(!1),c.setChecked(!1),void b.resolve({disabled:!1,checked:!1}))}.bind(this))["catch"](function(a){console.error("Error thrown while revoking push notifications. Most likely because push was never registered",a)})}),b.promise}}function f(b,c){function d(){return{}}function e(){return"PushManager"in a?"permissions"in navigator?void f():void g():void console.log("Push not supported.")}function f(){navigator.permissions.query({name:"push",userVisibleOnly:!0}).then(function(){navigator.serviceWorker.ready.then(function(a){a.pushManager.getSubscription().then(function(a){return a?(c.setChecked(!0),void b.onPushSubscription(a)):void console.log("No subscription given")})["catch"](function(a){console.log("An error occured while calling getSubscription()",a)})})})["catch"](function(a){console.log("Ooops Unable to check the permission",a)})}function g(){return"denied"===Notification.permission?void console.log("Notifications are Blocked"):"default"===Notification.permission?(c.setChecked(!1),void c.setDisabled(!1)):void navigator.serviceWorker.ready.then(function(a){a.pushManager.getSubscription().then(function(a){return a?(c.setChecked(!0),void b.onPushSubscription(a)):(c.setChecked(!1),void c.setDisabled(!1))})["catch"](function(a){console.log("An error occured while calling getSubscription()",a)})})}var h={initialiseState:e,$get:d};return h}function g(a){function b(){return{getEndpoint:c,setEndpoint:d}}function c(){return e}function d(b){a.setDisabled(!1),"subscriptionId"in b&&(e=b.subscriptionId)}var e,f={onPushSubscription:d,$get:b};return f}function h(){function a(a){e=a}function b(a){f=a}function c(){return f}function d(){return e}var e="init",f=!1;this.setChecked=a,this.setDisabled=b,this.getChecked=d,this.getDisabled=c,this.$get=function(){return{getChecked:d,getDisabled:c,setChecked:a,setDisabled:b}}}b.module("angular-bamieh-gcm",[]).provider("bamiehGcmState",h).provider("bamiehGcmEndpoint",g).provider("bamiehGcmInitilize",f).config(d).service("BamiehSubscribeDeviceService",e),d.$inject=["bamiehGcmInitilizeProvider"],e.$inject=["$q","bamiehGcmEndpoint","bamiehGcmState"],f.$inject=["bamiehGcmEndpointProvider","bamiehGcmStateProvider"],g.$inject=["bamiehGcmStateProvider"]}(window,window.angular);